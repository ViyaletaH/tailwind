/// <reference types="node" />
/// <reference types="node" />
export function transport(): typeof WebsocketTransport;
export type NodeTransportOptions = {
    agent?: import("http").Agent | import("https").Agent | undefined;
};
export type WebSocketTransportOptions = NodeTransportOptions & import('@improbable-eng/grpc-web').grpc.TransportOptions;
export type HttpAgent = import('http').Agent;
export type HttpsAgent = import('https').Agent;
/**
 * @param {object} options
 * @param {HttpAgent|HttpsAgent} [options.agent] - http.Agent used to control HTTP client behaviour
 */
declare function WebsocketTransport(options: {
    agent?: import("http").Agent | import("https").Agent | undefined;
}): (opts: import('@improbable-eng/grpc-web').grpc.TransportOptions) => {
    /**
     * @param {Uint8Array} msgBytes
     */
    sendMessage: (msgBytes: Uint8Array) => void;
    finishSend: () => void;
    /**
     * @param {import('@improbable-eng/grpc-web').grpc.Metadata} metadata
     */
    start: (metadata: import('@improbable-eng/grpc-web').grpc.Metadata) => void;
    cancel: () => void;
};
export {};
//# sourceMappingURL=transport.node.d.ts.map